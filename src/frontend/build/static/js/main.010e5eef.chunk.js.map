{"version":3,"sources":["Components/LauncherModal.js","Components/Tooltip.js","Icons/LogoFlat.png","App.js","serviceWorker.js","index.js","Classes/Constants.js","Classes/TimerClass.js","Components/Toasts.js"],"names":["commands","help","description","js","arguments","handle","args","eval","join","fs","window","require","path","childProcess","getPathFromString","value","process","pathSplit","split","root","appdata","env","APPDATA","local","LOCALAPPDATA","localappdata","home","HOMEPATH","public","PUBLIC","user","USERPROFILE","programfiles86","ProgramFiles","programfiles","ProgramW6432","toLowerCase","replaceAll","slice","LauncherModal","fieldRef","React","useRef","useState","autoCompleteEntries","setAutoCompleteEntries","handleSend","_arguments","match","startsWith","command","response","Toasts","showToast","toString","console","log","exec","close","e","error","current","className","alt","src","IconFlat","height","ref","onKeyDown","key","currentTarget","onChange","search","results","Object","keys","filter","cmd","indexOf","components","result","push","onClick","icon","faTerminal","style","opacity","fpRaw","fpDir","fp","existsSync","readdirSync","p","map","fn","lstatSync","isDirectory","faFolder","faFile","placeholder","faFire","Tooltip","children","direction","color","visible","useEffect","parentElement","classList","add","remove","joinClassNames","backgroundColor","App","setOpacity","events","onMouseUp","target","setTimeout","bind","focusListener","addEventListener","removeEventListener","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","final","i","length","Array","isArray","trim","getRandomKey","Math","random","substr","Timer","callback","duration","playAutomatically","this","remainingTime","resume","startTime","Date","now","clearTimeout","id","Toast","type","life","fixedTime","handleRemove","setClosing","closing","timer","useMemo","progressBar","handleMouseEnter","pause","animationPlayState","handleMouseLeave","handleFocus","handleBlur","hasFocus","onMouseEnter","onMouseLeave","end","cursor","animationDuration","state","toasts","instance","horizontalStyle","verticalStyle","setState","additionalOptions","toast","createElement","t","Component","createRef"],"mappings":"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","file":"static/js/main.010e5eef.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFile, faFire, faFolder, faTerminal } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Tooltip from \"./Tooltip\";\r\nimport Toasts from \"./Toasts\";\r\nimport IconFlat from \"../Icons/LogoFlat.png\";\r\n\r\nconst commands = {\r\n    help: {\r\n        description: \"Lists all of the available commands.\"\r\n    },\r\n    js: {\r\n        description: \"Executes the specified arguments as JavaScript.\",\r\n        arguments: \"<code>\",\r\n        handle: (...args) => eval(args.join(\" \"))\r\n    }\r\n};\r\n\r\n// Import the file system module\r\nconst fs = window.require(\"fs\");\r\n// Import the path module\r\nconst path = window.require(\"path\");\r\n// Get the child process module\r\nconst childProcess = window.require(\"child_process\");\r\n\r\n// This is responsible for formatting paths to variable paths\r\nfunction getPathFromString(value) {\r\n    // Grab the electron process, not the renderer process\r\n    const process = window.require(\"process\");\r\n    // Split the path into directory sections\r\n    const pathSplit = value.split(\"/\");\r\n\r\n    // Get the root of the path based on some variables\r\n    // This might be the most incomprehensible line I've written in a while\r\n    const root = {\r\n        appdata: process.env.APPDATA,\r\n        local: process.env.LOCALAPPDATA,\r\n        localappdata: process.env.LOCALAPPDATA,\r\n        home: process.env.HOMEPATH,\r\n        public: process.env.PUBLIC,\r\n        user: process.env.USERPROFILE,\r\n        programfiles86: process.env.ProgramFiles,\r\n        programfiles: process.env.ProgramW6432\r\n    }[pathSplit[0].toLowerCase().replaceAll(\"%\", \"\")] ?? pathSplit[0];\r\n\r\n    // Return the path based on the root directory and the rest of the split path\r\n    return path.join(root, pathSplit.slice(1).join(\"/\")).replaceAll(\"\\\\\", \"/\");\r\n}\r\n\r\nexport default function LauncherModal() {\r\n    // Create the field ref\r\n    const fieldRef = React.useRef();\r\n    // Create our auto complete state\r\n    const [autoCompleteEntries, setAutoCompleteEntries] = React.useState([]);\r\n    \r\n    // Handle the send event\r\n    function handleSend(args) {\r\n        const _arguments = args.match(/[^\\s\"']+|\"([^\"]*)\"|'([^']*)'/gm);\r\n        \r\n        // Sent arguments was of type command, execute command if valid\r\n        if (args.startsWith(\"!\")) {\r\n            // Get the command object based on the first argument, lowercase, without the !\r\n            const command = commands[args.split(\" \")[0].slice(1).toLowerCase()];\r\n            \r\n            // Command exists, execute it\r\n            if (command) {\r\n                // Call the command and get its return value\r\n                const response = command.handle(..._arguments.slice(1));\r\n                \r\n                // Display our data to the user\r\n                response && Toasts.showToast(response.toString());\r\n                console.log(response);\r\n            }\r\n            // Command does not exist, throw an error\r\n            else {\r\n                Toasts.showToast(<span>{arguments[0].slice(1)} is not a valid command</span>, \"Failure\");\r\n            }\r\n        }\r\n        // TODO check for indexed files\r\n        // If no commands or indexed files were found, try to launch manually\r\n        else {\r\n            // Try catch, in case of errors\r\n            try {\r\n                // Open the file, directory, or URL\r\n                childProcess.exec(`start \"\" \"${getPathFromString(args)}\"`);\r\n\r\n                // Close the modal\r\n                window.close();\r\n            }\r\n            // An error was caught, throw it to the console and warn the user\r\n            catch (e) {\r\n                console.error(e);\r\n                Toasts.showToast(\"Error opening file, check console for details\", \"Failure\");\r\n            }\r\n        }\r\n        \r\n        // Clear the field\r\n        fieldRef.current.value = \"\";\r\n    }\r\n    \r\n    // Handle rendering of auto-complete\r\n    function handleAutoComplete({ currentTarget: { value } }) {\r\n        // If we're typing a command, handle that and return\r\n        if (value.startsWith(\"!\")) {\r\n            // Get the value after the !, in lowercase\r\n            const search = value.slice(1).toLowerCase();\r\n            // Filter all of our commands by search\r\n            const results = Object.keys(commands).filter(cmd => ~cmd.indexOf(search));\r\n            // Create an empty components array\r\n            const components = [];\r\n            \r\n            // Iterate our results and push them to the components array\r\n            for (const result of results) {\r\n                const command = commands[result];\r\n                \r\n                components.push(\r\n                    <div className=\"Item\" key={result} onClick={() => fieldRef.current.value = \"!\" + result}>\r\n                        <FontAwesomeIcon icon={faTerminal}/>\r\n                        \r\n                        <span><b>!{result}</b><span style={{ opacity: 0.5 }}> - {command.description}</span></span>\r\n                    </div>\r\n                );\r\n                \r\n                setAutoCompleteEntries(components);\r\n            }\r\n            \r\n            return;\r\n        }\r\n        \r\n        // Put our raw path through the variable checks\r\n        const fpRaw = getPathFromString(value);\r\n        // Get the second to last path entry, to exclude what we're searching\r\n        const fpDir = fpRaw.split(\"/\").slice(0, -1).join(\"/\");\r\n        // If the fp doesn't exist, but the dir does, set fp to dir\r\n        const fp = !fs.existsSync(fpRaw) && fs.existsSync(fpDir) ? fpDir : fpRaw;\r\n        \r\n        // dir exists, get its files\r\n        if (value && fs.existsSync(fp)) {\r\n            // Read all files in the directory, filtered by searching the final path entry\r\n            const files = fs.readdirSync(fp).filter(p =>\r\n                ~path.join(fp, p).toLowerCase().indexOf(fpRaw.split(\"/\").slice(-1)[0].toLowerCase()));\r\n            // Map the first 10 files into auto complete entry components\r\n            const components = files.slice(0, 10).map(fn => (\r\n                <div className=\"Item\" key={fn} onClick={() => fieldRef.current.value = path.join(fp, fn)}>\r\n                    <FontAwesomeIcon icon={fs.lstatSync(path.join(fp, fn)).isDirectory()\r\n                        ? faFolder : faFile}/>\r\n                    \r\n                    <span>{fn}</span>\r\n                </div>\r\n            ));\r\n            \r\n            // Set our entries to the components list\r\n            setAutoCompleteEntries(components);\r\n        }\r\n        // If the directory doesn't exist, clear our entries\r\n        else setAutoCompleteEntries([]);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"LauncherModal\">\r\n            <div className=\"Title\">\r\n                <img alt=\"Icon\" src={IconFlat} height={20}/>\r\n                \r\n                Ignis Launcher\r\n            </div>\r\n\r\n            <div className=\"Flex\">\r\n                <input className=\"LauncherModalField\" ref={fieldRef}\r\n                       onKeyDown={e => e.key === \"Enter\" && handleSend(e.currentTarget.value)}\r\n                       onChange={handleAutoComplete}\r\n                       placeholder=\"Example - !help\"/>\r\n\r\n                <div className=\"Button\" onClick={() => handleSend(fieldRef.current.value)}>\r\n                    <FontAwesomeIcon icon={faFire}/>\r\n                    \r\n                    <Tooltip>\r\n                        Run Command\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"AutoComplete\">\r\n                {autoCompleteEntries}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./Tooltip.scss\";\r\nimport { joinClassNames } from \"../Classes/Constants\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default function Tooltip({ children, direction = \"up\", className = \"\", color, style, onClick }) {\r\n    const [visible, setVisible] = React.useState(false);\r\n    const ref = React.useRef();\r\n    \r\n    React.useEffect(() => {\r\n        ref.current.parentElement.classList.add(\"HasTooltip\");\r\n        \r\n        return () => {\r\n            ref.current && ref.current.parentElement.classList.remove(\"HasTooltip\");\r\n        };\r\n    }, [ children, direction ]);\r\n    \r\n    return (\r\n        <div ref={ref} className={joinClassNames(\"TooltipContainer\", direction.toLowerCase(), [visible, \"Visible\"], className)} style={style} onClick={onClick}>\r\n            <div className=\"Tooltip\" style={{ backgroundColor: color }}>{ children }</div>\r\n            <div className=\"TooltipArrow\" style={{ backgroundColor: color }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function DetachedTooltip({ children, direction = \"up\", className = \"\", color, style, onClick, parentRef }) {\r\n    const container = React.useMemo(() => document.getElementsByClassName(\"AppMain\")[0], []);\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [styles, setStyles] = React.useState(null);\r\n    const ref = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        const parent = parentRef.current;\r\n        \r\n        const events = {\r\n            onMouseEnter: () => {\r\n                if (visible) return;\r\n                \r\n                const rect = parent.getBoundingClientRect();\r\n                const tooltipRect = ref.current.getBoundingClientRect();\r\n                \r\n                switch (direction) {\r\n                    case \"up\":\r\n                        setStyles({\r\n                            top: rect.y - rect.height - tooltipRect.height,\r\n                            left: rect.x + (rect.width / 2)\r\n                        });\r\n                        break;\r\n\r\n                    case \"left\":\r\n                        setStyles({\r\n                            top: rect.y - (rect.height / 2) + ((tooltipRect.height * 1.25) / 3),\r\n                            left: rect.x - (tooltipRect.width * 1.25)\r\n                        });\r\n                        break;\r\n                        \r\n                    case \"down\":\r\n                        setStyles({\r\n                            bottom: rect.y - (tooltipRect.height * 1.25),\r\n                            left: rect.x - ((tooltipRect.width * 1.25) / 2) + (rect.width / 2)\r\n                        });\r\n                        break;\r\n                        \r\n                    case \"right\":\r\n                        setStyles({\r\n                            top: rect.y - ((tooltipRect.height * 1.25) / 2) + (rect.height / 2),\r\n                            right: rect.x - tooltipRect.width - 5\r\n                        });\r\n                        break;\r\n                }\r\n                \r\n                setVisible(true);\r\n            },\r\n            onMouseLeave: () => setVisible(false)\r\n        };\r\n        \r\n        parent.addEventListener(\"mouseenter\", events.onMouseEnter);\r\n        parent.addEventListener(\"mouseleave\", events.onMouseLeave);\r\n        \r\n        return () => {\r\n            parent.removeEventListener(\"mouseenter\", events.onMouseEnter);\r\n            parent.removeEventListener(\"mouseleave\", events.onMouseLeave);\r\n        };\r\n    }, [ children, direction ]);\r\n\r\n    return ReactDOM.createPortal(\r\n        <div ref={ref} className={joinClassNames(\"TooltipContainer Detached\", direction.toLowerCase(), [visible, \"Visible\"], className)}\r\n             style={{ ...(styles ?? {}), ...(style ?? {}) }} onClick={onClick}>\r\n            <div className=\"Tooltip\" style={{ backgroundColor: color }}>{ children }</div>\r\n            <div className=\"TooltipArrow\" style={{ backgroundColor: color }}/>\r\n        </div>,\r\n        container\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/LogoFlat.a9c26e3e.png\";","import React from \"react\";\nimport \"./App.scss\";\nimport LauncherModal from \"./Components/LauncherModal\";\nimport Toasts from \"./Components/Toasts\";\n\nexport default function App() {\n\t// Create a ref\n\tconst ref = React.useRef();\n\tconst [opacity, setOpacity] = React.useState(0);\n\t\n\t// Create some events\n\tconst events = {\n\t\tonMouseUp: e => {\n\t\t\t// Ensure we're clicking the backdrop\n\t\t\tif (e.target !== e.currentTarget) return;\n\t\t\t\n\t\t\t// Transition out\n\t\t\tsetOpacity(0);\n\t\t\t// Close the window after the transition ends\n\t\t\tsetTimeout(window.close.bind(window), 250);\n\t\t}\n\t};\n\t\n\t// On component mount\n\tReact.useEffect(() => {\n\t\t// Create a focus listener callback to set the opacity to 1\n\t\tconst focusListener = () => setOpacity(1);\n\t\t\n\t\t// Add the event listener on mount, remove on unmount\n\t\twindow.addEventListener(\"focus\", focusListener);\n\t\treturn () => window.removeEventListener(\"focus\", focusListener);\n\t}, []);\n\t\n\treturn (\n\t\t<div className=\"App\" {...events} ref={ref} style={{ opacity }}>\n\t\t\t<LauncherModal/>\n\t\t\t\n\t\t\t<Toasts/>\n\t\t</div>\n\t);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App/>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\nserviceWorker.unregister();","export function joinClassNames() {\r\n    let final = \"\";\r\n\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        switch (typeof(arguments[i])) {\r\n            case (Array.isArray(arguments[i]) && typeof(arguments[i][0]) === \"boolean\" && \"object\"):\r\n                if (arguments[i][0] === true)\r\n                    final += arguments[i][1];\r\n                else if (arguments[i][2])\r\n                    final += arguments[i][2];\r\n                break;\r\n\r\n            default:\r\n                final += arguments[i];\r\n                break;\r\n        }\r\n\r\n        final += \" \";\r\n    }\r\n\r\n    return final.trim();\r\n}\r\n\r\nexport function getRandomKey() { return Math.random().toString(36).substr(7); }","export default class Timer {\r\n    id;\r\n    startTime;\r\n    remainingTime;\r\n    callback;\r\n    duration;\r\n    \r\n    constructor(callback, duration, playAutomatically = true) {\r\n        this.callback = callback;\r\n        this.duration = duration;\r\n        this.remainingTime = duration;\r\n        \r\n        if (playAutomatically)\r\n            this.resume();\r\n    }\r\n    \r\n    resume() {\r\n        this.startTime = Date.now();\r\n        \r\n        clearTimeout(this.id);\r\n        this.id = setTimeout(this.callback, this.remainingTime);\r\n    }\r\n    \r\n    pause() {\r\n        clearTimeout(this.id);\r\n        this.remainingTime -= Date.now() - this.startTime;\r\n    }\r\n    \r\n    end() {\r\n        clearTimeout(this.id);\r\n        this.callback();\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Toasts.scss\";\r\nimport { getRandomKey, joinClassNames } from \"../Classes/Constants\";\r\nimport Timer from \"../Classes/TimerClass\";\r\n\r\nexport function Toast({ children, type, life, remove, callback, color, fixedTime = false }) {\r\n\tconst handleRemove = () => {\r\n\t\tsetClosing(true);\r\n\r\n\t\tsetTimeout(remove, 500);\r\n\t};\r\n\t\r\n\tconst [closing, setClosing] = React.useState(false);\r\n\tconst timer = React.useMemo(() => new Timer(handleRemove, life * 1000, false), []);\r\n\tconst progressBar = React.useRef();\r\n\t\r\n\tconst handleMouseEnter = () => {\r\n\t\ttimer.pause();\r\n\t\tprogressBar.current.style.animationPlayState = \"paused\";\r\n\t};\r\n\t\r\n\tconst handleMouseLeave = () => {\r\n\t\ttimer.resume();\r\n\t\tprogressBar.current.style.animationPlayState = \"running\";\r\n\t};\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tconst handleFocus = () => !fixedTime && handleMouseLeave();\r\n\t\tconst handleBlur = () => !fixedTime && handleMouseEnter();\r\n\t\t\r\n\t\twindow.addEventListener(\"focus\", handleFocus);\r\n\t\twindow.addEventListener(\"blur\", handleBlur);\r\n\t\t\r\n\t\t(fixedTime || document.hasFocus()) && handleMouseLeave();\r\n\t\t\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"focus\", handleFocus);\r\n\t\t\twindow.removeEventListener(\"blur\", handleBlur);\r\n\t\t};\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t<div className={joinClassNames(\"Toast\", [closing, \"Closing\"], type)}\r\n\t\t\t onMouseEnter={fixedTime ? null : handleMouseEnter}\r\n\t\t\t onMouseLeave={fixedTime ? null : handleMouseLeave}\r\n\t\t\t onClick={callback ? e => { callback(e); timer.end(); } : () => { timer.end(); }}\r\n\t\t\t style={{ cursor: callback ? \"pointer\" : null, backgroundColor: color }}>\r\n\t\t\t{ children }\r\n\r\n\t\t\t<div className=\"ProgressBarContainer\">\r\n\t\t\t\t<div ref={progressBar} className=\"ProgressBar\" style={{ animationDuration: life + \"s\" }}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default class Toasts extends React.Component {\r\n\tstatic instance;\r\n\tstatic ref = React.createRef();\r\n\t\r\n\tstate = { toasts: [] };\r\n\r\n\tcomponentDidMount() {\r\n\t\tToasts.instance = this;\r\n\t}\r\n\t\r\n\tstatic showToast(children, type = \"\", life = 5, additionalOptions = {}) {\r\n\t\tconst { callback = null, color = null, fixedTime = false } = additionalOptions;\r\n\t\t\r\n\t\tconst toast = React.createElement(Toast, {\r\n\t\t\tkey: getRandomKey(),\r\n\t\t\tchildren, type, life, color, fixedTime,\r\n\t\t\tremove: () => {\r\n\t\t\t\tthis.instance.setState({ toasts: this.instance.state.toasts.filter(t => t !== toast) });\r\n\t\t\t},\r\n\t\t\tcallback\r\n\t\t});\r\n\r\n\t\tthis.instance.setState({ toasts: [ ...this.instance.state.toasts, toast ] });\r\n\t\treturn toast;\r\n\t}\r\n\t\r\n\tget horizontalStyle() {\r\n\t\treturn \"Center\";\r\n\t\t\r\n\t\t// switch (Settings.props.notifications.toasts.positionX) {\r\n\t\t// \tcase 0:\r\n\t\t// \t\treturn \"Left\";\r\n\t\t// \tcase 1:\r\n\t\t// \t\treturn \"Center\";\r\n\t\t// \tcase 2:\r\n\t\t// \t\treturn \"Right\";\r\n\t\t// }\r\n\t}\r\n\t\r\n\tget verticalStyle() {\r\n\t\treturn \"Bottom\";\r\n\t\t\r\n\t\t// switch (Settings.props.notifications.toasts.positionY) {\r\n\t\t// \tcase 0:\r\n\t\t// \t\treturn \"Top\";\r\n\t\t// \tcase 1:\r\n\t\t// \t\treturn \"Bottom\";\r\n\t\t// }\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div ref={Toasts.ref} className={joinClassNames(\"ToastsContainer\", this.horizontalStyle, this.verticalStyle)}>\r\n\t\t\t\t<div className={joinClassNames(\"ClearButton\", [!!this.state.toasts?.length, \"Visible\"])} onClick={() => this.setState({ toasts: [] })}>\r\n\t\t\t\t\t<u>Close all</u>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t{ this.state.toasts }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"],"sourceRoot":""}