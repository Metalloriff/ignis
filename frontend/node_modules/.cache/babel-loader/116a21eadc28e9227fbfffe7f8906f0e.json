{"ast":null,"code":"export function joinClassNames(){var final=\"\";for(var i=0;i<arguments.length;i++){switch(typeof arguments[i]){case Array.isArray(arguments[i])&&typeof arguments[i][0]===\"boolean\"&&\"object\":if(arguments[i][0]===true)final+=arguments[i][1];else if(arguments[i][2])final+=arguments[i][2];break;default:final+=arguments[i];break;}final+=\" \";}return final.trim();}export function getRandomKey(){return Math.random().toString(36).substr(7);}","map":{"version":3,"sources":["D:/Drive/Shared/JavaScript/Electron/ignis/frontend/src/Classes/Constants.js"],"names":["joinClassNames","final","i","arguments","length","Array","isArray","trim","getRandomKey","Math","random","toString","substr"],"mappings":"AAAA,MAAO,SAASA,CAAAA,cAAT,EAA0B,CAC7B,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGC,SAAS,CAACC,MAA9B,CAAsCF,CAAC,EAAvC,CAA2C,CACvC,OAAQ,MAAOC,CAAAA,SAAS,CAACD,CAAD,CAAxB,EACI,IAAMG,CAAAA,KAAK,CAACC,OAAN,CAAcH,SAAS,CAACD,CAAD,CAAvB,GAA+B,MAAOC,CAAAA,SAAS,CAACD,CAAD,CAAT,CAAa,CAAb,CAAP,GAA4B,SAA3D,EAAwE,QAA9E,CACI,GAAIC,SAAS,CAACD,CAAD,CAAT,CAAa,CAAb,IAAoB,IAAxB,CACID,KAAK,EAAIE,SAAS,CAACD,CAAD,CAAT,CAAa,CAAb,CAAT,CADJ,IAEK,IAAIC,SAAS,CAACD,CAAD,CAAT,CAAa,CAAb,CAAJ,CACDD,KAAK,EAAIE,SAAS,CAACD,CAAD,CAAT,CAAa,CAAb,CAAT,CACJ,MAEJ,QACID,KAAK,EAAIE,SAAS,CAACD,CAAD,CAAlB,CACA,MAVR,CAaAD,KAAK,EAAI,GAAT,CACH,CAED,MAAOA,CAAAA,KAAK,CAACM,IAAN,EAAP,CACH,CAED,MAAO,SAASC,CAAAA,YAAT,EAAwB,CAAE,MAAOC,CAAAA,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,CAAP,CAA8C","sourcesContent":["export function joinClassNames() {\r\n    let final = \"\";\r\n\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        switch (typeof(arguments[i])) {\r\n            case (Array.isArray(arguments[i]) && typeof(arguments[i][0]) === \"boolean\" && \"object\"):\r\n                if (arguments[i][0] === true)\r\n                    final += arguments[i][1];\r\n                else if (arguments[i][2])\r\n                    final += arguments[i][2];\r\n                break;\r\n\r\n            default:\r\n                final += arguments[i];\r\n                break;\r\n        }\r\n\r\n        final += \" \";\r\n    }\r\n\r\n    return final.trim();\r\n}\r\n\r\nexport function getRandomKey() { return Math.random().toString(36).substr(7); }"]},"metadata":{},"sourceType":"module"}