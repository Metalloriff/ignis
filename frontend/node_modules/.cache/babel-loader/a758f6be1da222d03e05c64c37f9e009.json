{"ast":null,"code":"export function joinClassNames() {\n  let final = \"\";\n\n  for (let i = 0; i < arguments.length; i++) {\n    switch (typeof arguments[i]) {\n      case Array.isArray(arguments[i]) && typeof arguments[i][0] === \"boolean\" && \"object\":\n        if (arguments[i][0] === true) final += arguments[i][1];else if (arguments[i][2]) final += arguments[i][2];\n        break;\n\n      default:\n        final += arguments[i];\n        break;\n    }\n\n    final += \" \";\n  }\n\n  return final.trim();\n}\nexport function getRandomKey() {\n  return Math.random().toString(36).substr(7);\n}","map":{"version":3,"sources":["D:/MEGA/Shared/React/ignis/frontend/src/Classes/Constants.js"],"names":["joinClassNames","final","i","arguments","length","Array","isArray","trim","getRandomKey","Math","random","toString","substr"],"mappings":"AAAA,OAAO,SAASA,cAAT,GAA0B;AAC7B,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACvC,YAAQ,OAAOC,SAAS,CAACD,CAAD,CAAxB;AACI,WAAMG,KAAK,CAACC,OAAN,CAAcH,SAAS,CAACD,CAAD,CAAvB,KAA+B,OAAOC,SAAS,CAACD,CAAD,CAAT,CAAa,CAAb,CAAP,KAA4B,SAA3D,IAAwE,QAA9E;AACI,YAAIC,SAAS,CAACD,CAAD,CAAT,CAAa,CAAb,MAAoB,IAAxB,EACID,KAAK,IAAIE,SAAS,CAACD,CAAD,CAAT,CAAa,CAAb,CAAT,CADJ,KAEK,IAAIC,SAAS,CAACD,CAAD,CAAT,CAAa,CAAb,CAAJ,EACDD,KAAK,IAAIE,SAAS,CAACD,CAAD,CAAT,CAAa,CAAb,CAAT;AACJ;;AAEJ;AACID,QAAAA,KAAK,IAAIE,SAAS,CAACD,CAAD,CAAlB;AACA;AAVR;;AAaAD,IAAAA,KAAK,IAAI,GAAT;AACH;;AAED,SAAOA,KAAK,CAACM,IAAN,EAAP;AACH;AAED,OAAO,SAASC,YAAT,GAAwB;AAAE,SAAOC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,CAAP;AAA8C","sourcesContent":["export function joinClassNames() {\r\n    let final = \"\";\r\n\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        switch (typeof(arguments[i])) {\r\n            case (Array.isArray(arguments[i]) && typeof(arguments[i][0]) === \"boolean\" && \"object\"):\r\n                if (arguments[i][0] === true)\r\n                    final += arguments[i][1];\r\n                else if (arguments[i][2])\r\n                    final += arguments[i][2];\r\n                break;\r\n\r\n            default:\r\n                final += arguments[i];\r\n                break;\r\n        }\r\n\r\n        final += \" \";\r\n    }\r\n\r\n    return final.trim();\r\n}\r\n\r\nexport function getRandomKey() { return Math.random().toString(36).substr(7); }"]},"metadata":{},"sourceType":"module"}