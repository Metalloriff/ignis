{"ast":null,"code":"var _jsxFileName = \"D:\\\\Drive\\\\Shared\\\\JavaScript\\\\Electron\\\\ignis\\\\frontend\\\\src\\\\Components\\\\Tooltip.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Tooltip.scss\";\nimport { joinClassNames } from \"../Classes/Constants\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tooltip({\n  children,\n  direction = \"up\",\n  className = \"\",\n  color,\n  style,\n  onClick\n}) {\n  _s();\n\n  const [visible, setVisible] = React.useState(false);\n  const ref = React.useRef();\n  React.useEffect(() => {\n    ref.current.parentElement.classList.add(\"HasTooltip\");\n    return () => {\n      ref.current && ref.current.parentElement.classList.remove(\"HasTooltip\");\n    };\n  }, [children, direction]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: joinClassNames(\"TooltipContainer\", direction.toLowerCase(), [visible, \"Visible\"], className),\n    style: style,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tooltip\",\n      style: {\n        backgroundColor: color\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TooltipArrow\",\n      style: {\n        backgroundColor: color\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tooltip, \"GTE9sjGf+X5QncI+FY9HzjjevtI=\");\n\n_c = Tooltip;\nexport function DetachedTooltip({\n  children,\n  direction = \"up\",\n  className = \"\",\n  color,\n  style,\n  onClick,\n  parentRef\n}) {\n  _s2();\n\n  const container = React.useMemo(() => document.getElementsByClassName(\"AppMain\")[0], []);\n  const [visible, setVisible] = React.useState(false);\n  const [styles, setStyles] = React.useState(null);\n  const ref = React.useRef();\n  React.useEffect(() => {\n    const parent = parentRef.current;\n    const events = {\n      onMouseEnter: () => {\n        if (visible) return;\n        const rect = parent.getBoundingClientRect();\n        const tooltipRect = ref.current.getBoundingClientRect();\n\n        switch (direction) {\n          case \"up\":\n            setStyles({\n              top: rect.y - rect.height - tooltipRect.height,\n              left: rect.x + rect.width / 2\n            });\n            break;\n\n          case \"left\":\n            setStyles({\n              top: rect.y - rect.height / 2 + tooltipRect.height * 1.25 / 3,\n              left: rect.x - tooltipRect.width * 1.25\n            });\n            break;\n\n          case \"down\":\n            setStyles({\n              bottom: rect.y - tooltipRect.height * 1.25,\n              left: rect.x - tooltipRect.width * 1.25 / 2 + rect.width / 2\n            });\n            break;\n\n          case \"right\":\n            setStyles({\n              top: rect.y - tooltipRect.height * 1.25 / 2 + rect.height / 2,\n              right: rect.x - tooltipRect.width - 5\n            });\n            break;\n        }\n\n        setVisible(true);\n      },\n      onMouseLeave: () => setVisible(false)\n    };\n    parent.addEventListener(\"mouseenter\", events.onMouseEnter);\n    parent.addEventListener(\"mouseleave\", events.onMouseLeave);\n    return () => {\n      parent.removeEventListener(\"mouseenter\", events.onMouseEnter);\n      parent.removeEventListener(\"mouseleave\", events.onMouseLeave);\n    };\n  }, [children, direction]);\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: joinClassNames(\"TooltipContainer Detached\", direction.toLowerCase(), [visible, \"Visible\"], className),\n    style: { ...(styles !== null && styles !== void 0 ? styles : {}),\n      ...(style !== null && style !== void 0 ? style : {})\n    },\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tooltip\",\n      style: {\n        backgroundColor: color\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TooltipArrow\",\n      style: {\n        backgroundColor: color\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this), container);\n}\n\n_s2(DetachedTooltip, \"wmXBmUhDK6W02K7kYYI1qV8unB8=\");\n\n_c2 = DetachedTooltip;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tooltip\");\n$RefreshReg$(_c2, \"DetachedTooltip\");","map":{"version":3,"sources":["D:/Drive/Shared/JavaScript/Electron/ignis/frontend/src/Components/Tooltip.js"],"names":["React","joinClassNames","ReactDOM","Tooltip","children","direction","className","color","style","onClick","visible","setVisible","useState","ref","useRef","useEffect","current","parentElement","classList","add","remove","toLowerCase","backgroundColor","DetachedTooltip","parentRef","container","useMemo","document","getElementsByClassName","styles","setStyles","parent","events","onMouseEnter","rect","getBoundingClientRect","tooltipRect","top","y","height","left","x","width","bottom","right","onMouseLeave","addEventListener","removeEventListener","createPortal"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAS,GAAG,IAAxB;AAA8BC,EAAAA,SAAS,GAAG,EAA1C;AAA8CC,EAAAA,KAA9C;AAAqDC,EAAAA,KAArD;AAA4DC,EAAAA;AAA5D,CAAjB,EAAwF;AAAA;;AACnG,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA9B;AACA,QAAMC,GAAG,GAAGb,KAAK,CAACc,MAAN,EAAZ;AAEAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AAClBF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,CAA0BC,SAA1B,CAAoCC,GAApC,CAAwC,YAAxC;AAEA,WAAO,MAAM;AACTN,MAAAA,GAAG,CAACG,OAAJ,IAAeH,GAAG,CAACG,OAAJ,CAAYC,aAAZ,CAA0BC,SAA1B,CAAoCE,MAApC,CAA2C,YAA3C,CAAf;AACH,KAFD;AAGH,GAND,EAMG,CAAEhB,QAAF,EAAYC,SAAZ,CANH;AAQA,sBACI;AAAK,IAAA,GAAG,EAAEQ,GAAV;AAAe,IAAA,SAAS,EAAEZ,cAAc,CAAC,kBAAD,EAAqBI,SAAS,CAACgB,WAAV,EAArB,EAA8C,CAACX,OAAD,EAAU,SAAV,CAA9C,EAAoEJ,SAApE,CAAxC;AAAwH,IAAA,KAAK,EAAEE,KAA/H;AAAsI,IAAA,OAAO,EAAEC,OAA/I;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE;AAAEa,QAAAA,eAAe,EAAEf;AAAnB,OAAhC;AAAA,gBAA8DH;AAA9D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE;AAAEkB,QAAAA,eAAe,EAAEf;AAAnB;AAArC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAlBuBJ,O;;KAAAA,O;AAoBxB,OAAO,SAASoB,eAAT,CAAyB;AAAEnB,EAAAA,QAAF;AAAYC,EAAAA,SAAS,GAAG,IAAxB;AAA8BC,EAAAA,SAAS,GAAG,EAA1C;AAA8CC,EAAAA,KAA9C;AAAqDC,EAAAA,KAArD;AAA4DC,EAAAA,OAA5D;AAAqEe,EAAAA;AAArE,CAAzB,EAA2G;AAAA;;AAC9G,QAAMC,SAAS,GAAGzB,KAAK,CAAC0B,OAAN,CAAc,MAAMC,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,EAA2C,CAA3C,CAApB,EAAmE,EAAnE,CAAlB;AACA,QAAM,CAAClB,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsB9B,KAAK,CAACY,QAAN,CAAe,IAAf,CAA5B;AACA,QAAMC,GAAG,GAAGb,KAAK,CAACc,MAAN,EAAZ;AAEAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AAClB,UAAMgB,MAAM,GAAGP,SAAS,CAACR,OAAzB;AAEA,UAAMgB,MAAM,GAAG;AACXC,MAAAA,YAAY,EAAE,MAAM;AAChB,YAAIvB,OAAJ,EAAa;AAEb,cAAMwB,IAAI,GAAGH,MAAM,CAACI,qBAAP,EAAb;AACA,cAAMC,WAAW,GAAGvB,GAAG,CAACG,OAAJ,CAAYmB,qBAAZ,EAApB;;AAEA,gBAAQ9B,SAAR;AACI,eAAK,IAAL;AACIyB,YAAAA,SAAS,CAAC;AACNO,cAAAA,GAAG,EAAEH,IAAI,CAACI,CAAL,GAASJ,IAAI,CAACK,MAAd,GAAuBH,WAAW,CAACG,MADlC;AAENC,cAAAA,IAAI,EAAEN,IAAI,CAACO,CAAL,GAAUP,IAAI,CAACQ,KAAL,GAAa;AAFvB,aAAD,CAAT;AAIA;;AAEJ,eAAK,MAAL;AACIZ,YAAAA,SAAS,CAAC;AACNO,cAAAA,GAAG,EAAEH,IAAI,CAACI,CAAL,GAAUJ,IAAI,CAACK,MAAL,GAAc,CAAxB,GAA+BH,WAAW,CAACG,MAAZ,GAAqB,IAAtB,GAA8B,CAD3D;AAENC,cAAAA,IAAI,EAAEN,IAAI,CAACO,CAAL,GAAUL,WAAW,CAACM,KAAZ,GAAoB;AAF9B,aAAD,CAAT;AAIA;;AAEJ,eAAK,MAAL;AACIZ,YAAAA,SAAS,CAAC;AACNa,cAAAA,MAAM,EAAET,IAAI,CAACI,CAAL,GAAUF,WAAW,CAACG,MAAZ,GAAqB,IADjC;AAENC,cAAAA,IAAI,EAAEN,IAAI,CAACO,CAAL,GAAWL,WAAW,CAACM,KAAZ,GAAoB,IAArB,GAA6B,CAAvC,GAA6CR,IAAI,CAACQ,KAAL,GAAa;AAF1D,aAAD,CAAT;AAIA;;AAEJ,eAAK,OAAL;AACIZ,YAAAA,SAAS,CAAC;AACNO,cAAAA,GAAG,EAAEH,IAAI,CAACI,CAAL,GAAWF,WAAW,CAACG,MAAZ,GAAqB,IAAtB,GAA8B,CAAxC,GAA8CL,IAAI,CAACK,MAAL,GAAc,CAD3D;AAENK,cAAAA,KAAK,EAAEV,IAAI,CAACO,CAAL,GAASL,WAAW,CAACM,KAArB,GAA6B;AAF9B,aAAD,CAAT;AAIA;AA3BR;;AA8BA/B,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH,OAtCU;AAuCXkC,MAAAA,YAAY,EAAE,MAAMlC,UAAU,CAAC,KAAD;AAvCnB,KAAf;AA0CAoB,IAAAA,MAAM,CAACe,gBAAP,CAAwB,YAAxB,EAAsCd,MAAM,CAACC,YAA7C;AACAF,IAAAA,MAAM,CAACe,gBAAP,CAAwB,YAAxB,EAAsCd,MAAM,CAACa,YAA7C;AAEA,WAAO,MAAM;AACTd,MAAAA,MAAM,CAACgB,mBAAP,CAA2B,YAA3B,EAAyCf,MAAM,CAACC,YAAhD;AACAF,MAAAA,MAAM,CAACgB,mBAAP,CAA2B,YAA3B,EAAyCf,MAAM,CAACa,YAAhD;AACH,KAHD;AAIH,GApDD,EAoDG,CAAEzC,QAAF,EAAYC,SAAZ,CApDH;AAsDA,sBAAOH,QAAQ,CAAC8C,YAAT,eACH;AAAK,IAAA,GAAG,EAAEnC,GAAV;AAAe,IAAA,SAAS,EAAEZ,cAAc,CAAC,2BAAD,EAA8BI,SAAS,CAACgB,WAAV,EAA9B,EAAuD,CAACX,OAAD,EAAU,SAAV,CAAvD,EAA6EJ,SAA7E,CAAxC;AACK,IAAA,KAAK,EAAE,EAAE,IAAIuB,MAAJ,aAAIA,MAAJ,cAAIA,MAAJ,GAAc,EAAd,CAAF;AAAqB,UAAIrB,KAAJ,aAAIA,KAAJ,cAAIA,KAAJ,GAAa,EAAb;AAArB,KADZ;AACqD,IAAA,OAAO,EAAEC,OAD9D;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE;AAAEa,QAAAA,eAAe,EAAEf;AAAnB,OAAhC;AAAA,gBAA8DH;AAA9D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE;AAAEkB,QAAAA,eAAe,EAAEf;AAAnB;AAArC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,EAMHkB,SANG,CAAP;AAQH;;IApEeF,e;;MAAAA,e","sourcesContent":["import React from \"react\";\r\nimport \"./Tooltip.scss\";\r\nimport { joinClassNames } from \"../Classes/Constants\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default function Tooltip({ children, direction = \"up\", className = \"\", color, style, onClick }) {\r\n    const [visible, setVisible] = React.useState(false);\r\n    const ref = React.useRef();\r\n    \r\n    React.useEffect(() => {\r\n        ref.current.parentElement.classList.add(\"HasTooltip\");\r\n        \r\n        return () => {\r\n            ref.current && ref.current.parentElement.classList.remove(\"HasTooltip\");\r\n        };\r\n    }, [ children, direction ]);\r\n    \r\n    return (\r\n        <div ref={ref} className={joinClassNames(\"TooltipContainer\", direction.toLowerCase(), [visible, \"Visible\"], className)} style={style} onClick={onClick}>\r\n            <div className=\"Tooltip\" style={{ backgroundColor: color }}>{ children }</div>\r\n            <div className=\"TooltipArrow\" style={{ backgroundColor: color }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function DetachedTooltip({ children, direction = \"up\", className = \"\", color, style, onClick, parentRef }) {\r\n    const container = React.useMemo(() => document.getElementsByClassName(\"AppMain\")[0], []);\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [styles, setStyles] = React.useState(null);\r\n    const ref = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        const parent = parentRef.current;\r\n        \r\n        const events = {\r\n            onMouseEnter: () => {\r\n                if (visible) return;\r\n                \r\n                const rect = parent.getBoundingClientRect();\r\n                const tooltipRect = ref.current.getBoundingClientRect();\r\n                \r\n                switch (direction) {\r\n                    case \"up\":\r\n                        setStyles({\r\n                            top: rect.y - rect.height - tooltipRect.height,\r\n                            left: rect.x + (rect.width / 2)\r\n                        });\r\n                        break;\r\n\r\n                    case \"left\":\r\n                        setStyles({\r\n                            top: rect.y - (rect.height / 2) + ((tooltipRect.height * 1.25) / 3),\r\n                            left: rect.x - (tooltipRect.width * 1.25)\r\n                        });\r\n                        break;\r\n                        \r\n                    case \"down\":\r\n                        setStyles({\r\n                            bottom: rect.y - (tooltipRect.height * 1.25),\r\n                            left: rect.x - ((tooltipRect.width * 1.25) / 2) + (rect.width / 2)\r\n                        });\r\n                        break;\r\n                        \r\n                    case \"right\":\r\n                        setStyles({\r\n                            top: rect.y - ((tooltipRect.height * 1.25) / 2) + (rect.height / 2),\r\n                            right: rect.x - tooltipRect.width - 5\r\n                        });\r\n                        break;\r\n                }\r\n                \r\n                setVisible(true);\r\n            },\r\n            onMouseLeave: () => setVisible(false)\r\n        };\r\n        \r\n        parent.addEventListener(\"mouseenter\", events.onMouseEnter);\r\n        parent.addEventListener(\"mouseleave\", events.onMouseLeave);\r\n        \r\n        return () => {\r\n            parent.removeEventListener(\"mouseenter\", events.onMouseEnter);\r\n            parent.removeEventListener(\"mouseleave\", events.onMouseLeave);\r\n        };\r\n    }, [ children, direction ]);\r\n\r\n    return ReactDOM.createPortal(\r\n        <div ref={ref} className={joinClassNames(\"TooltipContainer Detached\", direction.toLowerCase(), [visible, \"Visible\"], className)}\r\n             style={{ ...(styles ?? {}), ...(style ?? {}) }} onClick={onClick}>\r\n            <div className=\"Tooltip\" style={{ backgroundColor: color }}>{ children }</div>\r\n            <div className=\"TooltipArrow\" style={{ backgroundColor: color }}/>\r\n        </div>,\r\n        container\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}