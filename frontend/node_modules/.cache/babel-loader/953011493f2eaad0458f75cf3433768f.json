{"ast":null,"code":"var _jsxFileName = \"D:\\\\MEGA\\\\Shared\\\\React\\\\ignis\\\\frontend\\\\src\\\\Components\\\\Modals.js\",\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Modals.scss\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport Toasts from \"./Toasts\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport InlineLoading from \"./InlineLoading\";\nimport { getRandomKey } from \"../Classes/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet openModal;\nlet closeModal;\nlet copyToClipboard;\nlet openImageModal;\nlet openBoolModal;\nlet openStringModal;\nlet onCloseEvents = [];\n\nclass Modals extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      active: false,\n      locked: false,\n      modals: [],\n      closing: []\n    };\n  }\n\n  componentDidMount() {\n    openModal = async modal => {\n      while (this.state.locked) await new Promise(r => setImmediate(r));\n\n      await new Promise(r => setImmediate(r)); // javascript is shit\n\n      const modals = this.state.modals;\n      const id = modals.push(modal);\n      this.setState({\n        modals,\n        active: true\n      });\n      return id;\n    };\n\n    closeModal = () => {\n      if (this.state.modals.length > 0) {\n        const modals = [...this.state.modals];\n        const modal = this.state.modals[modals.length - 1];\n        const closing = [...this.state.closing];\n        modals.pop(modal);\n        closing.push(modal);\n\n        if (this.state.active) {\n          this.setState({\n            active: modals.length > 0,\n            locked: true,\n            closing\n          });\n          setTimeout(() => {\n            this.state.closing.pop(modal);\n            this.setState({\n              modals,\n              locked: false\n            });\n          }, 300);\n        }\n\n        for (let event of onCloseEvents) {\n          event();\n        }\n\n        onCloseEvents = [];\n      }\n    };\n\n    copyToClipboard = text => {\n      try {\n        window.navigator.clipboard.writeText(text);\n        Toasts.showToast( /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: text.length >= 100 ? text.substr(0, 100) + \"...\" : text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 28\n          }, this), \" copied to clipboard\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this), \"Success\");\n      } catch (e) {\n        openStringModal({\n          title: \"Failed To Copy\",\n          description: \"Your browser does not support copying to clipboard, you can manually copy here.\",\n          value: text\n        });\n      }\n    };\n\n    openImageModal = (url, getSources) => {\n      var _s2 = $RefreshSig$();\n\n      const ImageModal = () => {\n        _s2();\n\n        var _s = $RefreshSig$();\n\n        const ref = React.useRef();\n        const sources = typeof getSources === \"function\" ? getSources() : null;\n\n        const Arrows = ({\n          img\n        }) => {\n          _s();\n\n          const [index, setIndex] = React.useState(-1);\n          React.useEffect(() => {\n            setTimeout(() => {\n              if (img.current) {\n                setIndex(sources.indexOf(img.current.src));\n              }\n            }, 500);\n          });\n\n          const nav = (e, dir) => {\n            img.current.src = sources[index + dir];\n            setIndex(index + dir);\n            e.preventDefault();\n            e.stopPropagation();\n          };\n\n          return index === -1 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ArrowsContainer\",\n            children: [index > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Arrow Left\",\n              onClick: e => nav(e, -1),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"Icon\",\n                icon: faChevronLeft\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 9\n            }, this) : null, index < sources.length - 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Arrow Right\",\n              onClick: e => nav(e, 1),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"Icon\",\n                icon: faChevronRight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 9\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this);\n        };\n\n        _s(Arrows, \"xQrEUUFTCl7mlbP81ZHuF/u1wg0=\");\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ImageModal\",\n          onClick: () => closeModal(),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            ref: ref,\n            src: url,\n            alt: \"Image failed to load.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 7\n          }, this), (sources === null || sources === void 0 ? void 0 : sources.length) ? /*#__PURE__*/_jsxDEV(Arrows, {\n            img: ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 27\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this);\n      };\n\n      _s2(ImageModal, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n      openModal( /*#__PURE__*/_jsxDEV(ImageModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 14\n      }, this));\n    };\n\n    openBoolModal = async options => {\n      const {\n        title = \"\",\n        description = \"\",\n        yesText = \"Yes\",\n        noText = \"No\",\n        yesColor = \"#ff6666\",\n        noColor = \"\"\n      } = options;\n      const response = await new Promise(resolve => {\n        openModal( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BoolModal PrimaryBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Title\",\n            dangerouslySetInnerHTML: {\n              __html: title\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Description\",\n            dangerouslySetInnerHTML: {\n              __html: description\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Button TertiaryBg\",\n              onClick: () => resolve(false),\n              style: {\n                backgroundColor: noColor\n              },\n              children: noText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Button TertiaryBg\",\n              onClick: () => resolve(true),\n              style: {\n                backgroundColor: yesColor\n              },\n              children: yesText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 6\n        }, this));\n      });\n      closeModal();\n      return response;\n    };\n\n    openStringModal = async options => {\n      const {\n        rich = false,\n        async = false\n      } = options;\n      const {\n        id\n      } = getRandomKey();\n      const response = await new Promise(resolve => {\n        openModal( /*#__PURE__*/_jsxDEV(StringModal, {\n          resolve: resolve,\n          ...options,\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 6\n        }, this));\n      });\n      !async && closeModal();\n      return response;\n    };\n  }\n\n  handleBackdropClick(e) {\n    var _modals$props$onBackd, _modals$props;\n\n    if (![\"Modal\", \"ModalContainer\"].some(cn => e.target.classList.contains(cn))) return;\n    const {\n      modals\n    } = this.state;\n    ((_modals$props$onBackd = (_modals$props = modals[modals.length - 1].props) === null || _modals$props === void 0 ? void 0 : _modals$props.onBackdropClick) !== null && _modals$props$onBackd !== void 0 ? _modals$props$onBackd : closeModal)();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ModalContainer\" + (this.state.active ? \" Active\" : \"\"),\n        onMouseDown: this.handleBackdropClick.bind(this),\n        children: this.state.modals.map(modal => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Modal\" + (this.state.closing.includes(modal) || this.state.modals.indexOf(modal) < this.state.modals.length - 1 && this.state.closing.length === 0 ? \" Closing\" : \"\"),\n          style: {\n            zIndex: this.state.modals.indexOf(modal) * 10\n          },\n          children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n            children: modal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 8\n          }, this)\n        }, this.state.modals.indexOf(modal), false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport function StringModal(props) {\n  _s3();\n\n  const {\n    title = \"\",\n    description = \"\",\n    yesText = \"Confirm\",\n    noText = \"Cancel\",\n    yesColor = \"\",\n    noColor = \"\",\n    value = \"\",\n    onChange = null,\n    rich = false,\n    resolve,\n    id\n  } = props;\n  const [no, setNoState] = React.useState(false);\n  const [yes, setYesState] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StringModal PrimaryBg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      dangerouslySetInnerHTML: {\n        __html: title\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Description\",\n      dangerouslySetInnerHTML: {\n        __html: description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      className: \"Field TertiaryBg\",\n      defaultValue: value,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button TertiaryBg\",\n        onClick: () => (resolve(null), setNoState(true)),\n        style: {\n          backgroundColor: noColor\n        },\n        children: no ? /*#__PURE__*/_jsxDEV(InlineLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 134\n        }, this) : noText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button TertiaryBg\",\n        onClick: () => (resolve(document.getElementById(id).value), setYesState(true)),\n        style: {\n          backgroundColor: yesColor\n        },\n        children: yes ? /*#__PURE__*/_jsxDEV(InlineLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 166\n        }, this) : yesText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(StringModal, \"2TPc9yBXe7HUxlJ++4crikE1wOw=\");\n\n_c = StringModal;\nexport { Modals, openModal, closeModal, copyToClipboard, openImageModal, openBoolModal, openStringModal };\n\nvar _c;\n\n$RefreshReg$(_c, \"StringModal\");","map":{"version":3,"sources":["D:/MEGA/Shared/React/ignis/frontend/src/Components/Modals.js"],"names":["React","ErrorBoundary","Toasts","FontAwesomeIcon","faChevronLeft","faChevronRight","InlineLoading","getRandomKey","openModal","closeModal","copyToClipboard","openImageModal","openBoolModal","openStringModal","onCloseEvents","Modals","Component","state","active","locked","modals","closing","componentDidMount","modal","Promise","r","setImmediate","id","push","setState","length","pop","setTimeout","event","text","window","navigator","clipboard","writeText","showToast","substr","e","title","description","value","url","getSources","ImageModal","ref","useRef","sources","Arrows","img","index","setIndex","useState","useEffect","current","indexOf","src","nav","dir","preventDefault","stopPropagation","options","yesText","noText","yesColor","noColor","response","resolve","__html","backgroundColor","rich","async","handleBackdropClick","some","cn","target","classList","contains","props","onBackdropClick","render","bind","map","includes","zIndex","StringModal","onChange","no","setNoState","yes","setYesState","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Modals.scss\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport Toasts from \"./Toasts\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport InlineLoading from \"./InlineLoading\";\r\nimport { getRandomKey } from \"../Classes/Constants\";\r\n\r\nlet openModal;\r\nlet closeModal;\r\nlet copyToClipboard;\r\nlet openImageModal;\r\nlet openBoolModal;\r\nlet openStringModal;\r\n\r\nlet onCloseEvents = [];\r\n\r\nclass Modals extends React.Component {\r\n\tstate = { active: false, locked: false, modals: [], closing: [] };\r\n\r\n\tcomponentDidMount() {\r\n\t\topenModal = async modal => {\r\n\t\t\twhile (this.state.locked)\r\n\t\t\t\tawait new Promise(r => setImmediate(r));\r\n\t\t\tawait new Promise(r => setImmediate(r)); // javascript is shit\r\n\t\t\t\r\n\t\t\tconst modals = this.state.modals;\r\n\t\t\tconst id = modals.push(modal);\r\n\t\t\tthis.setState({ modals, active: true });\r\n\t\t\t\r\n\t\t\treturn id;\r\n\t\t};\r\n\r\n\t\tcloseModal = () => {\r\n\t\t\tif (this.state.modals.length > 0) {\r\n\t\t\t\tconst modals = [...this.state.modals];\r\n\t\t\t\tconst modal = this.state.modals[modals.length - 1];\r\n\t\t\t\tconst closing = [...this.state.closing];\r\n\r\n\t\t\t\tmodals.pop(modal);\r\n\t\t\t\tclosing.push(modal);\r\n\t\r\n\t\t\t\tif (this.state.active) {\r\n\t\t\t\t\tthis.setState({ active: modals.length > 0, locked: true, closing });\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.state.closing.pop(modal);\r\n\t\t\t\t\t\tthis.setState({ modals, locked: false });\r\n\t\t\t\t\t}, 300);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let event of onCloseEvents) {\r\n\t\t\t\t\tevent();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tonCloseEvents = [];\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcopyToClipboard = text => {\r\n\t\t\ttry {\r\n\t\t\t\twindow.navigator.clipboard.writeText(text);\r\n\r\n\t\t\t\tToasts.showToast(<span><b>{text.length >= 100 ? text.substr(0, 100) + \"...\" : text}</b> copied to clipboard</span>, \"Success\");\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\topenStringModal({\r\n\t\t\t\t\ttitle: \"Failed To Copy\",\r\n\t\t\t\t\tdescription: \"Your browser does not support copying to clipboard, you can manually copy here.\",\r\n\t\t\t\t\tvalue: text\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\topenImageModal = (url, getSources) => {\r\n\t\t\tconst ImageModal = () => {\r\n\t\t\t\tconst ref = React.useRef();\r\n\t\t\t\tconst sources = typeof(getSources) === \"function\" ? getSources() : null;\r\n\t\t\t\t\r\n\t\t\t\tconst Arrows = ({ img }) => {\r\n\t\t\t\t\tconst [index, setIndex] = React.useState(-1);\r\n\t\t\t\t\t\r\n\t\t\t\t\tReact.useEffect(() => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tif (img.current) {\r\n\t\t\t\t\t\t\t\tsetIndex(sources.indexOf(img.current.src));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 500);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst nav = (e, dir) => {\r\n\t\t\t\t\t\timg.current.src = sources[index + dir];\r\n\t\t\t\t\t\tsetIndex(index + dir);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn index === -1 ? null : (\r\n\t\t\t\t\t\t<div className=\"ArrowsContainer\">\r\n\t\t\t\t\t\t\t{ index > 0 ? (\r\n\t\t\t\t\t\t\t\t<div className=\"Arrow Left\" onClick={e => nav(e, -1)}>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon className=\"Icon\" icon={faChevronLeft}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : null }\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{ index < sources.length - 1 ? (\r\n\t\t\t\t\t\t\t\t<div className=\"Arrow Right\" onClick={e => nav(e, 1)}>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon className=\"Icon\" icon={faChevronRight}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : null }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"ImageModal\" onClick={() => closeModal()}>\r\n\t\t\t\t\t\t<img ref={ref} src={url} alt=\"Image failed to load.\"/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{ sources?.length ? <Arrows img={ref}/> : null }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\topenModal(<ImageModal/>);\r\n\t\t}\r\n\t\t\r\n\t\topenBoolModal = async options => {\r\n\t\t\tconst { title = \"\", description = \"\", yesText = \"Yes\", noText = \"No\", yesColor = \"#ff6666\", noColor = \"\" } = options;\r\n\t\t\t\r\n\t\t\tconst response = await new Promise(resolve => {\r\n\t\t\t\topenModal(\r\n\t\t\t\t\t<div className=\"BoolModal PrimaryBg\">\r\n\t\t\t\t\t\t<div className=\"Title\" dangerouslySetInnerHTML={{ __html: title }}/>\r\n\t\t\t\t\t\t<div className=\"Description\" dangerouslySetInnerHTML={{ __html: description }}/>\r\n\r\n\t\t\t\t\t\t<div className=\"Footer\">\r\n\t\t\t\t\t\t\t<div className=\"Button TertiaryBg\" onClick={() => resolve(false)} style={{ backgroundColor: noColor }}>{noText}</div>\r\n\t\t\t\t\t\t\t<div className=\"Button TertiaryBg\" onClick={() => resolve(true)} style={{ backgroundColor: yesColor }}>{yesText}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tcloseModal();\r\n\t\t\t\r\n\t\t\treturn response;\r\n\t\t};\r\n\t\t\r\n\t\topenStringModal = async options => {\r\n\t\t\tconst { rich = false, async = false } = options;\r\n\t\t\tconst { id } = getRandomKey();\r\n\r\n\t\t\tconst response = await new Promise(resolve => {\r\n\t\t\t\topenModal(\r\n\t\t\t\t\t<StringModal resolve={resolve} {...options} id={id}/>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\t!async && closeModal();\r\n\r\n\t\t\treturn response;\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleBackdropClick(e) {\r\n\t\tif (![\"Modal\", \"ModalContainer\"].some(cn => e.target.classList.contains(cn))) return;\r\n\t\tconst { modals } = this.state;\r\n\t\t\r\n\t\t(modals[modals.length - 1].props?.onBackdropClick ?? closeModal)();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<div className={\"ModalContainer\" + (this.state.active ? \" Active\" : \"\")}\r\n\t\t\t\t\t onMouseDown={this.handleBackdropClick.bind(this)}>\r\n\t\t\t\t\t{ this.state.modals.map(modal => (\r\n\t\t\t\t\t\t<div key={this.state.modals.indexOf(modal)} className={\"Modal\" + (this.state.closing.includes(modal) ||\r\n\t\t\t\t\t\t(this.state.modals.indexOf(modal) < (this.state.modals.length - 1) && this.state.closing.length === 0) ? \" Closing\" : \"\")}\r\n\t\t\t\t\t\t\t style={{ zIndex: this.state.modals.indexOf(modal) * 10 }}>\r\n\t\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t\t{ modal }\r\n\t\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)) }\r\n\t\t\t\t</div>\r\n\t\t\t</ErrorBoundary>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport function StringModal(props) {\r\n\tconst { title = \"\", description = \"\", yesText = \"Confirm\", noText = \"Cancel\", yesColor = \"\", noColor = \"\", value = \"\", onChange = null, rich = false, resolve, id } = props;\r\n\tconst [no, setNoState] = React.useState(false);\r\n\tconst [yes, setYesState] = React.useState(false);\r\n\t\r\n\treturn (\r\n\t\t<div className=\"StringModal PrimaryBg\">\r\n\t\t\t<div className=\"Title\" dangerouslySetInnerHTML={{ __html: title }}/>\r\n\t\t\t<div className=\"Description\" dangerouslySetInnerHTML={{ __html: description }}/>\r\n\r\n\t\t\t<input id={id} className=\"Field TertiaryBg\" defaultValue={value} onChange={onChange}/>\r\n\r\n\t\t\t<div className=\"Footer\">\r\n\t\t\t\t<div className=\"Button TertiaryBg\" onClick={() => (resolve(null), setNoState(true))} style={{ backgroundColor: noColor }}>{ no ? <InlineLoading/> : noText }</div>\r\n\t\t\t\t<div className=\"Button TertiaryBg\" onClick={() => (resolve(document.getElementById(id).value), setYesState(true))} style={{ backgroundColor: yesColor }}>{ yes ? <InlineLoading/> : yesText }</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport { Modals, openModal, closeModal, copyToClipboard, openImageModal, openBoolModal, openStringModal };"]},"metadata":{},"sourceType":"module"}